{"version":3,"file":"static/js/289.5af4ddad.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/features/users/ui/Users.module.css?6f98","features/users/user/ui/User.tsx","webpack://samurai-way/./src/components/common/pagination/Pagination.module.css?2932","components/common/pagination/Pagination.tsx","features/users/ui/Users.tsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","features/users/model/users-selectors.ts","features/users/ui/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Users_content__BDTba\",\"header\":\"Users_header__VTaC6\",\"user_wrapper\":\"Users_user_wrapper__UAo1w\",\"user_info\":\"Users_user_info__pNB8I\",\"user_name\":\"Users_user_name__6m5Mh\",\"status_wrapper\":\"Users_status_wrapper__Sk4OI\",\"status_text\":\"Users_status_text__J3MZy\",\"location_wrapper\":\"Users_location_wrapper__4Zn2s\",\"page_number\":\"Users_page_number__gSrAr\",\"page_current\":\"Users_page_current__Ao3zE\"};","import React from \"react\";\r\nimport s from \"../../ui/Users.module.css\";\r\nimport photo from \"../../../../assets/friend4.jpg\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { UserType } from \"../../model/users-reducer\";\r\n\r\ntype UserProps = {\r\n  user: UserType;\r\n  isFollowingInProgressUsersId: Array<number>;\r\n  followUser: (userId: number) => void;\r\n  unfollowUser: (userId: number) => void;\r\n};\r\n\r\nexport const User = ({\r\n  user,\r\n  isFollowingInProgressUsersId,\r\n  unfollowUser,\r\n  followUser,\r\n}: UserProps) => {\r\n  const followClickHandler = () => {\r\n    followUser(user.id);\r\n  };\r\n\r\n  const unfollowClickHandler = () => {\r\n    unfollowUser(user.id);\r\n  };\r\n\r\n  return (\r\n    <div className={s.user_wrapper}>\r\n      <div className={s.user_info}>\r\n        <NavLink to={\"profile/\" + user.id}>\r\n          <img\r\n            src={user.photos.small != null ? user.photos.small : photo}\r\n            alt=\"user\"\r\n          />\r\n        </NavLink>\r\n\r\n        {user.followed === true ? (\r\n          <button\r\n            disabled={isFollowingInProgressUsersId.some((id) => id === user.id)}\r\n            onClick={unfollowClickHandler}\r\n          >\r\n            Unfollow\r\n          </button>\r\n        ) : (\r\n          <button\r\n            disabled={isFollowingInProgressUsersId.some((id) => id === user.id)}\r\n            onClick={followClickHandler}\r\n          >\r\n            Follow\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div className={s.status_wrapper}>\r\n        <h3>{user.name}</h3>\r\n        <p className={s.status_text}>{user.status} </p>\r\n      </div>\r\n\r\n      <div className={s.location_wrapper}>\r\n        <span>{\"user.location.country\"}</span>\r\n        <span>{\"user.location.city\"}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"page_current\":\"Pagination_page_current__78xKt\"};","import React, { useState } from 'react';\r\nimport s from './Pagination.module.css'\r\ntype Props = {\r\n  totalItemsCount: number\r\n  pageCount: number\r\n  currentPage: number\r\n  setCurrentPage: (pageNumber: number) => void\r\n  portionSize?: number\r\n}\r\n\r\nexport const Pagination = ({totalItemsCount, pageCount, currentPage, setCurrentPage, portionSize = 10}: Props) => {\r\n\r\n  let totalPageCount = Math.ceil(totalItemsCount / pageCount);\r\n  const pagesCountArr = [];\r\n\r\n  for (let i = 1; i <= totalPageCount; i++) {\r\n    pagesCountArr.push(i);\r\n  }\r\n\r\n  let portionCount = Math.ceil(totalPageCount / portionSize);\r\n  const [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionElement = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionElement = portionSize * portionNumber;\r\n\r\n  const goToPreviousPortion = () => {\r\n    setPortionNumber(portionNumber - 1)\r\n  }\r\n\r\n  const goToNextPortion = () => {\r\n    setPortionNumber(portionNumber + 1)\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {portionNumber > 1 && <button onClick={goToPreviousPortion}>Previous</button>}\r\n\r\n    {pagesCountArr.filter(page => page >=leftPortionElement && page <=rightPortionElement)\r\n                  .map(page => {\r\n                    return <span key={page + 156789}\r\n                                  className={`${currentPage === page ? s.page_current : ''}`}\r\n                                  onClick={(e) => setCurrentPage(page)}>\r\n                            {page}\r\n                          </span>\r\n                  })\r\n\r\n    }\r\n    {portionNumber < portionCount && <button onClick={goToNextPortion}>Next</button> }\r\n\r\n    </>\r\n\r\n  );\r\n};\r\n\r\n","import React from \"react\";\r\nimport s from \"./Users.module.css\";\r\nimport { UserType } from \"../model/users-reducer\";\r\nimport { Preloader } from \"../../../components/common/preloader/Preloader\";\r\nimport { User } from \"../user/ui/User\";\r\nimport { Pagination } from \"../../../components/common/pagination/Pagination\";\r\n\r\ntype UsersPropsType = {\r\n  totalUsersCount: number;\r\n  pageCount: number;\r\n  currentPage: number;\r\n  users: UserType[];\r\n  isFetched: boolean;\r\n  isFollowingInProgressUsersId: Array<number>;\r\n  setCurrentPage: (pageNumber: number) => void;\r\n  followUser: (userId: number) => void;\r\n  unfollowUser: (userId: number) => void;\r\n};\r\n\r\nexport const Users = (props: UsersPropsType) => {\r\n  return (\r\n    <div className={s.content}>\r\n      {props.isFetched ? <Preloader /> : \"\"}\r\n\r\n      <Pagination\r\n        totalItemsCount={props.totalUsersCount}\r\n        pageCount={props.pageCount}\r\n        currentPage={props.currentPage}\r\n        setCurrentPage={props.setCurrentPage}\r\n      />\r\n\r\n      {props.users.map((user) => (\r\n        <User\r\n          key={user.id}\r\n          user={user}\r\n          isFollowingInProgressUsersId={props.isFollowingInProgressUsersId}\r\n          followUser={props.followUser}\r\n          unfollowUser={props.unfollowUser}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function () {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from \"reselect\";\r\nimport { AppRootStateType } from \"../../../redux/redux-store\";\r\n\r\nconst getUsersSelector = (state: AppRootStateType) => {\r\n  return state.usersPage.users\r\n};\r\n\r\n// если у нас несколько зависимостей\r\n// const getUsers = createSelector(getUsersSelect, isFetched, (users, isFetched) => {\r\n  //return users.filter(u => u.lenght > 1)\r\n//})\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => { //getUsers - все еще селектор\r\n  return users.filter(u => true)\r\n});\r\n\r\nexport const getCurrentPage = (state: AppRootStateType) => {\r\n  return state.usersPage.currentPage\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppRootStateType) => {\r\n  return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getPageCount = (state: AppRootStateType) => {\r\n  return state.usersPage.pageCount\r\n}\r\n\r\nexport const getIsFetched = (state: AppRootStateType) => {\r\n  return state.usersPage.isFetched\r\n}\r\n\r\nexport const getIsFollowingInProgress = (state: AppRootStateType) => {\r\n  return state.usersPage.isFollowingInProgressUsersId\r\n}","import { connect } from \"react-redux\";\r\nimport { AppRootStateType } from \"../../../redux/redux-store\";\r\nimport {\r\n  setCurrentPageAC,\r\n  UserType,\r\n  requestUsersTC,\r\n  followUserTC,\r\n  unfollowUserTC,\r\n} from \"../model/users-reducer\";\r\nimport { Component } from \"react\";\r\nimport { Users } from \"./Users\";\r\nimport {\r\n  getCurrentPage,\r\n  getIsFetched,\r\n  getIsFollowingInProgress,\r\n  getPageCount,\r\n  getTotalUsersCount,\r\n  getUsers,\r\n} from \"../model/users-selectors\";\r\n\r\ntype MapStateToPropsType = {\r\n  users: UserType[];\r\n  currentPage: number;\r\n  totalUsersCount: number;\r\n  pageCount: number;\r\n  isFetched: boolean;\r\n  isFollowingInProgressUsersId: Array<number>;\r\n};\r\n\r\ntype MapDispatchToPropsType = {\r\n  setCurrentPage: (currentPage: number) => void;\r\n  getUsers: (pageCount: number, currentPage: number) => void;\r\n  followUser: (userId: number) => void;\r\n  unfollowUser: (userId: number) => void;\r\n};\r\n\r\nexport type UsersContainerPropsType = MapDispatchToPropsType &\r\n  MapStateToPropsType;\r\n\r\nclass UsersComponent extends Component<UsersContainerPropsType> {\r\n  constructor(props: UsersContainerPropsType) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount(): void {\r\n    this.props.getUsers(this.props.pageCount, this.props.currentPage);\r\n  }\r\n\r\n  setCurrentPage = (currentPageNumber: number) => {\r\n    this.props.setCurrentPage(currentPageNumber);\r\n\r\n    this.props.getUsers(this.props.pageCount, currentPageNumber);\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Users\r\n        totalUsersCount={this.props.totalUsersCount}\r\n        pageCount={this.props.pageCount}\r\n        currentPage={this.props.currentPage}\r\n        users={this.props.users}\r\n        setCurrentPage={this.setCurrentPage}\r\n        isFetched={this.props.isFetched}\r\n        isFollowingInProgressUsersId={this.props.isFollowingInProgressUsersId}\r\n        followUser={this.props.followUser}\r\n        unfollowUser={this.props.unfollowUser}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n//используем селекторы\r\nconst mapStateToProps = (state: AppRootStateType): MapStateToPropsType => {\r\n  return {\r\n    users: getUsers(state),\r\n    currentPage: getCurrentPage(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    pageCount: getPageCount(state),\r\n    isFetched: getIsFetched(state),\r\n    isFollowingInProgressUsersId: getIsFollowingInProgress(state),\r\n  };\r\n};\r\n\r\n/* let mapStateToProps = (state: AppRootStateType): MapStateToPropsType => {\r\n  return {\r\n    users: state.usersPage.users,\r\n    currentPage: state.usersPage.currentPage,\r\n    totalUsersCount: state.usersPage.totalUsersCount,\r\n    pageCount: state.usersPage.pageCount,\r\n    isFetched: state.usersPage.isFetched,\r\n    isFollowingInProgress: state.usersPage.isFollowingInProgress,\r\n  }\r\n}\r\n */\r\n/* let mapDispatchToProps = (dispatch: Dispatch<UsersPageActionType>): MapDispatchToPropsType => {\r\n  return {\r\n    updateFollow: (userId: number) => { //возможно надо удет исправить на string\r\n      dispatch(UpdateFollowAC(userId))\r\n    },\r\n    setUsers: (users: UserType[]) => {\r\n      dispatch(SetUsersAC(users))\r\n    },\r\n    setCurrentPage: (currentPage: number) => {\r\n      dispatch(SetCurrentPageAC(currentPage))\r\n    },\r\n    setTotalUsersCount: (totalUsersCount: number) => {\r\n      dispatch(SetTotalUsersCountAC(totalUsersCount))\r\n    },\r\n    changeIsFetched: (isFetched: boolean) => {\r\n      dispatch(ChangeIsFetchedAC(isFetched));\r\n    }\r\n  }\r\n} */\r\n\r\nexport const UsersContainer = connect(mapStateToProps, {\r\n  //Здесь автоматически connect к каждому значению свойства применяет dispatch,\r\n  // создавая таким образом callback как в ф-ции mapDispatchToProps\r\n  setCurrentPage: setCurrentPageAC,\r\n  getUsers: requestUsersTC,\r\n  followUser: followUserTC,\r\n  unfollowUser: unfollowUserTC,\r\n})(UsersComponent);\r\n\r\nexport default UsersContainer; //обязательно default export доя lazy loading\r\n\r\n//еще более короткая версия - нужно будет скорректировать наименования action creators,\r\n//чтобы они соответствовали названиям свойств\r\n\r\n/* export const UsersContainer = connect(mapStateToProps, {\r\n  updateFollow,\r\n  setCurrentPage,\r\n  changeIsFetched,\r\n})(UsersComponent); */\r\n"],"names":["User","_ref","user","isFollowingInProgressUsersId","unfollowUser","followUser","_jsxs","className","s","children","_jsx","NavLink","to","id","src","photos","small","photo","alt","followed","disabled","some","onClick","unfollowClickHandler","followClickHandler","name","status","Pagination","totalItemsCount","pageCount","currentPage","setCurrentPage","portionSize","totalPageCount","Math","ceil","pagesCountArr","i","push","portionCount","portionNumber","setPortionNumber","useState","leftPortionElement","rightPortionElement","_Fragment","goToPreviousPortion","filter","page","map","concat","e","goToNextPortion","Users","props","isFetched","Preloader","totalUsersCount","users","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","Array","_key","_len2","funcs","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","Error","_directlyPassedOption2","finalMemoizeOptions","isArray","dependencies","every","dep","dependencyTypes","join","getDependencies","memoizedResultFunc","selector","params","Object","assign","lastResult","recomputations","resetRecomputations","createSelector","getUsers","state","usersPage","u","getCurrentPage","getTotalUsersCount","getPageCount","getIsFetched","getIsFollowingInProgress","UsersComponent","Component","constructor","super","currentPageNumber","this","componentDidMount","render","UsersContainer","connect","setCurrentPageAC","requestUsersTC","followUserTC","unfollowUserTC"],"sourceRoot":""}