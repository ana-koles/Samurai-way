{"version":3,"file":"static/js/922.7fc9bc02.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/features/dialog/ui/dialogs/Dialogs.module.css?acd6","webpack://samurai-way/./src/features/dialog/ui/dialogs/chatMenu/ChatMenu.module.css?f63e","webpack://samurai-way/./src/features/dialog/ui/dialogs/chatMenu/chatMenuItem/ChatMenuItem.module.css?b089","features/dialog/ui/dialogs/chatMenu/chatMenuItem/ChatMenuItem.tsx","features/dialog/ui/dialogs/chatMenu/ChatMenu.tsx","hoc/withAuthRedirect.tsx","webpack://samurai-way/./src/features/dialog/ui/dialogs/dialogsSection/DialogsSection.module.css?1094","features/dialog/ui/dialogs/dialogsSection/dialogForm/DialogForm.tsx","webpack://samurai-way/./src/features/dialog/ui/dialogs/dialogsSection/dialogFriend/DialogFriend.module.css?afea","features/dialog/ui/dialogs/dialogsSection/dialogFriend/DialogFriend.tsx","webpack://samurai-way/./src/features/dialog/ui/dialogs/dialogsSection/myDialog/MyDialog.module.css?ef47","features/dialog/ui/dialogs/dialogsSection/myDialog/MyDialog.tsx","features/dialog/ui/dialogs/dialogsSection/DialogsSection.tsx","features/dialog/ui/dialogs/dialogsSection/DialogsSectionContainer.tsx","features/dialog/ui/dialogs/Dialogs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Dialogs_content__RIn-e\",\"dialog_section\":\"Dialogs_dialog_section__kjRks\"};","// extracted by mini-css-extract-plugin\nexport default {\"chat_wrapper\":\"ChatMenu_chat_wrapper__2S8Fa\",\"chat_content_wrapper\":\"ChatMenu_chat_content_wrapper__T4NVq\"};","// extracted by mini-css-extract-plugin\nexport default {\"chatItem\":\"ChatMenuItem_chatItem__SzSN8\",\"active\":\"ChatMenuItem_active__NUmOp\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './ChatMenuItem.module.css'\r\n\r\n\r\ntype ChatMenuItemPropsType = {\r\n  name: string\r\n  id: number\r\n}\r\n\r\nexport const ChatMenuItem = (props:ChatMenuItemPropsType) => {\r\n\r\n  let {name, id} = props;\r\n\r\n  let path = '/messages/' + id;\r\n\r\n  return (\r\n    <li><NavLink to={path} className={s.chatItem}>{name}</NavLink></li>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport s from './ChatMenu.module.css'\r\nimport { ChatMenuItem } from './chatMenuItem/ChatMenuItem';\r\nimport { AppRootStateType } from '../../../../../redux/redux-store';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\ntype ContactType = {\r\n  id: number\r\n  name: string\r\n}\r\n\r\ntype ChatMenuPropsType = {\r\n  messageContacts: ContactType[]\r\n}\r\n\r\nexport const ChatMenu = ({messageContacts}: ChatMenuPropsType) => {\r\n\r\n  return (\r\n    <div className={s.chat_wrapper}>\r\n      <div className={s.chat_content_wrapper}>\r\n        <h2>Let's Chat</h2>\r\n        <ul>\r\n          {messageContacts.map(contact => {\r\n            return <ChatMenuItem key={contact.id} name={contact.name} id={contact.id}/>\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: AppRootStateType) => {\r\n  return {\r\n    messageContacts: state.dialogsPage.messageContacts,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ChatMenu);","import { ComponentType } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AppRootStateType } from \"../redux/redux-store\";\r\nimport { connect } from \"react-redux\";\r\n\r\ntype MapStateToPropsType = {\r\n  isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStateToPropsType => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport function withAuthRedirect<T>(ComponentForRedirect: ComponentType<T>) {\r\n\r\n  const RedirectComponent = (props: MapStateToPropsType) => {\r\n    let {isAuth, ...restProps} = props;\r\n\r\n    if (!isAuth) {\r\n      return <Redirect to='/login'/>\r\n    }\r\n    return <ComponentForRedirect {...restProps as T & {}}/>\r\n  }\r\n\r\n  const  ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n  return ConnectedRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"dialog_section\":\"DialogsSection_dialog_section__Vuqub\",\"title_wrapper\":\"DialogsSection_title_wrapper__aTszC\",\"message_input\":\"DialogsSection_message_input__pU6Gx\"};","import { Field, InjectedFormProps, reduxForm } from 'redux-form';\r\nimport s from '../DialogsSection.module.css'\r\nimport { maxLenghtCreator, required } from '../../../../../../utils/validators/validators';\r\nimport { Textarea } from '../../../../../../components/common/formContolls/FormControls';\r\nimport { Button } from '../../../../../../components/button/Button';\r\n\r\n\r\nexport type DialogFormDataType = {\r\n  currentMessageText: string\r\n}\r\n\r\nconst maxLength100 = maxLenghtCreator(100)\r\n\r\nconst DialogForm = (props:InjectedFormProps<DialogFormDataType> ) => {\r\n\r\n  return (\r\n    <div className={s.message_input}>\r\n      <form onSubmit={props.handleSubmit}>\r\n        <Field\r\n          placeholder='Enter message...'\r\n          component={Textarea}\r\n          validate={[required, maxLength100]}\r\n          name='currentMessageText'\r\n          type='text'\r\n        />\r\n        <Button type='submit' name='post'/>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const DialogReduxForm = reduxForm<DialogFormDataType>({\r\n  form: 'dialog'\r\n})(DialogForm)","// extracted by mini-css-extract-plugin\nexport default {\"dialog_content_wrapper\":\"DialogFriend_dialog_content_wrapper__qiT+o\",\"dialog_wrapper\":\"DialogFriend_dialog_wrapper__WLDrJ\",\"user_info\":\"DialogFriend_user_info__61VXq\"};","import React from \"react\";\r\nimport s from \"./DialogFriend.module.css\";\r\nimport photo4 from \"../../../../../../assets/friend4.jpg\";\r\nimport { DialogItemType } from \"../../../../model/dialogs-reducer\";\r\n\r\ntype DialogPropsType = {\r\n  dialog: DialogItemType;\r\n};\r\n\r\nexport const DialogFriend: React.FC<DialogPropsType> = (props) => {\r\n  let { id, name, message } = props.dialog;\r\n\r\n  return (\r\n    <div id={id.toString()} className={s.dialog_wrapper}>\r\n      <div className={s.dialog_content_wrapper}>\r\n        <img src={photo4} alt=\"user\" />\r\n\r\n        <div className={s.user_info}>\r\n          <h3>{name}</h3>\r\n          <p>{message}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialog_content_wrapper\":\"MyDialog_dialog_content_wrapper__XRz2i\",\"dialog_wrapper\":\"MyDialog_dialog_wrapper__q4ang\",\"user_info\":\"MyDialog_user_info__Y98Np\"};","import React from \"react\";\r\nimport photo from \"../../../../../../assets/cat-profile2.jpg\";\r\nimport s from \"./MyDialog.module.css\";\r\nimport { DialogItemType } from \"../../../../model/dialogs-reducer\";\r\n\r\n\r\ntype DialogPropsType = {\r\n  dialog: DialogItemType;\r\n};\r\n\r\nexport const MyDialog: React.FC<DialogPropsType> = (props) => {\r\n  let { id, name, message } = props.dialog;\r\n\r\n  return (\r\n    <div id={id.toString()} className={s.dialog_wrapper}>\r\n      <div className={s.dialog_content_wrapper}>\r\n        <div className={s.user_info}>\r\n          <h3>{name}</h3>\r\n          <p>{message}</p>\r\n        </div>\r\n\r\n        <img src={photo} alt=\"user\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport s from './DialogsSection.module.css'\r\nimport { DialogsSectionPropsType } from './DialogsSectionContainer';\r\nimport { DialogFormDataType, DialogReduxForm } from './dialogForm/DialogForm';\r\nimport { DialogFriend } from './dialogFriend/DialogFriend';\r\nimport { MyDialog } from './myDialog/MyDialog';\r\nimport { reset } from 'redux-form';\r\n\r\n\r\nexport const DialogsSection:React.FC<DialogsSectionPropsType> = (props) => {\r\n  const addMessageToDialog = (values: DialogFormDataType) => {\r\n    let newMessage = values.currentMessageText;\r\n    props.addMessageToDialog(0, 'Fluffy Gangster', newMessage);\r\n    reset('dialog')\r\n  }\r\n\r\n  return (\r\n    <div className = {s.dialog_section}>\r\n        <div className ={s.title_wrapper}>\r\n            <h2>Cat Talks</h2>\r\n        </div>\r\n        {props.dialog.map(d => d.name === 'Fluffy Gangster' ?  <MyDialog dialog={d} key={d.id}/> : <DialogFriend dialog={d} key={d.id}/>)}\r\n        <DialogReduxForm onSubmit={addMessageToDialog}/>\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React, { Dispatch } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { addMessageToDialogAC, DialogItemType, DialogReducerActionType } from \"../../../model/dialogs-reducer\";\r\nimport { AppRootStateType } from \"../../../../../redux/redux-store\";\r\nimport { withAuthRedirect } from \"../../../../../hoc/withAuthRedirect\";\r\nimport { DialogsSection } from \"./DialogsSection\";\r\n\r\ntype MapStateToPropsType = {\r\n  dialog: DialogItemType[];\r\n};\r\n\r\ntype MapDispatchToPropsType = {\r\n  addMessageToDialog: (\r\n    userId: number,\r\n    userName: string,\r\n    newMessage: string\r\n  ) => void;\r\n};\r\n\r\nexport type DialogsSectionPropsType = MapDispatchToPropsType &\r\n  MapStateToPropsType;\r\n\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStateToPropsType => {\r\n  return {\r\n    dialog: state.dialogsPage.dialogs[1],\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: Dispatch<DialogReducerActionType>\r\n): MapDispatchToPropsType => {\r\n  return {\r\n    addMessageToDialog: (userId, userName, newMessage) => {\r\n      dispatch(addMessageToDialogAC(userId, userName, newMessage));\r\n    },\r\n  };\r\n};\r\n\r\nexport const DialogsSectionContainer = compose<React.ComponentType>(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(DialogsSection);\r\n\r\n","import React, { useContext } from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport ChatMenu from './chatMenu/ChatMenu';\r\nimport { DialogsSectionContainer } from './dialogsSection/DialogsSectionContainer';\r\n\r\n\r\nconst Dialogs = () => {\r\n  console.log('Dialogs')\r\n  return (\r\n    <div className={s.content}>\r\n      <DialogsSectionContainer/>\r\n      <ChatMenu  />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n\r\n"],"names":["ChatMenuItem","props","name","id","path","_jsx","children","NavLink","to","className","s","connect","state","messageContacts","dialogsPage","_ref","_jsxs","map","contact","mapStateToProps","isAuth","auth","maxLength100","maxLenghtCreator","DialogReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","type","Button","DialogFriend","message","dialog","toString","src","photo4","alt","MyDialog","photo","DialogsSectionContainer","compose","dialogs","dispatch","addMessageToDialog","userId","userName","newMessage","addMessageToDialogAC","ComponentForRedirect","restProps","Redirect","d","values","currentMessageText","reset","Dialogs","console","log","ChatMenu"],"sourceRoot":""}